<?xml version="1.0"?>
<project name="joz" default="build" basedir="..">

    <property name="root.dir" value="."/>

    <!-- The buildconf.properties file MUST be loaded before build.properties.
         Ideally the order should not matter, but not all directories use
         buildconf.properties.  To support a transition period we mandate
         that it must be loaded before build.properties allowing it to take
         precedence.  See the Tumri/build/default.buildconf.properties for
         more info.  -->
    <property name="buildconf.properties" value="../../buildconf.properties"/>
    <fail message="Must configure tree first.">
        <condition>
            <not> <available file="${buildconf.properties}"/> </not>
        </condition>
    </fail>
    <property file="${buildconf.properties}"/>

    <!-- This property file contains various parameters that in general
         DO NOT change.  -->
    <property file="${root.dir}/build/build.properties"/>

    <!-- JMN - This property file contains various parameters related to build and release. -->
    <property file="${top.root.dir}/build/joz_version.properties"/>
	
    <import file="joz.xml"/>
    <import file="testsuite.xml"/>

    <path id="project.class.path">
        <fileset dir="${ext.lib.dir}">
            <include name="*.jar"/>
        </fileset>
	<fileset dir="${zini.lib.dir}">
            <include name="*.jar"/>
	</fileset>
	<fileset dir="${utils.lib.dir}">
            <include name="*.jar"/>
	</fileset>
	<fileset dir="${cma.lib.dir}">
            <include name="*.jar"/>
	</fileset>	
 	<fileset dir="${caa.lib.dir}">
             <include name="*.jar"/>
   	</fileset>	
    <fileset dir="${llc.lib.dir}">
             <include name="llc.jar"/>
    </fileset>
	<fileset dir="${dist.dir}">
	    <include name="*.jar"/>
	</fileset>
    </path>

    <!-- ****************************************************************** -->

    <target name="init">
    	<mkdir dir="${stage.dir}"/>
        <mkdir dir="${classes.dir}"/>
    	<mkdir dir="${dist.dir}"/>
    </target>

    <!-- ****************************************************************** -->

    <target name="clean"
            description="Remove all build objects from the tree.">
        <delete dir="${dist.dir}"/>
    	<delete dir="${stage.dir}"/>
    </target>

    <!-- ****************************************************************** -->

    <!-- ****************************************************************** -->

    <target name="build"
            depends="build-Joz-war,build-indexer-jar,dist"
            description="Build everything and create the dist package.">
    </target>

    <!-- ****************************************************************** -->

    <target name="install"
            description="Install joz.">
	<!-- FIXME: Aahhh!  tomcat prefers the unzipped copy of the previous
	     war over the newly installed one.  -->
	<delete dir="${war.install.dir}/joz"/>
	<!-- This used to copy *.war with a fileset but no error is signalled
	     if joz.war doesn't exist.  -->
	<copy file="${dist.dir}/joz.war" todir="${war.install.dir}"/>
	<copy todir="${conf.install.dir}">
	    <fileset dir="${dist.dir}/conf">
		<include name="*.properties"/>
		<include name="*.xml"/>
	    </fileset>
	</copy>
    </target>

    <target name="dist" description="Create the dist package to be used for top level installation">
        <loadproperties srcfile="${root.dir}/build/joz_version.properties"/>
        <property name="package.name" value="${product_name}-${build_version}"/>
        <property name="package.dir" value="${dist.dir}/package"/>
        <property name="package.tmp.dir" value="${dist.dir}/${package.name}"/>
        <delete dir="${package.tmp.dir}"/>
        <!-- Create subdirectories -->
        <mkdir dir="${package.dir}"/>
        <mkdir dir="${package.tmp.dir}"/>
        <mkdir dir="${package.tmp.dir}/webapps"/>
        <mkdir dir="${package.tmp.dir}/conf"/>

        <copy file="${src.dir}/conf/joz.properties.template" tofile="${package.tmp.dir}/conf/joz.properties"/>
        <copy todir="${package.tmp.dir}/conf">
            <fileset dir="${src.dir}/conf">
                <include name="jozLog4j.xml"/>
            </fileset>
            <fileset dir="${root.dir}/tomcat/conf">
                <include name="server.xml"/>
            </fileset>
        </copy>
        <copy file="${dist.dir}/joz.war" todir="${package.tmp.dir}/webapps"/>
        <copy file="${src.dir}/conf/local.properties" todir="${package.dir}"/>
        <!-- Create a single tgz file and delete the package directory -->
        <tar tarfile="${package.tmp.dir}/${package.name}.tar" basedir="${package.tmp.dir}"/>
        <gzip zipfile="${package.dir}/${package.name}.tar.gz" src="${package.tmp.dir}/${package.name}.tar"/>
        <delete dir="${package.tmp.dir}"/>
    </target>
    
    <!-- ****************************************************************** -->

    <!-- Targets invoked by the top level build harness don't have
         descriptions as they're not intended to be manually invoked.  -->

    <target name="top-clean" depends="clean"/>

    <target name="top-build" depends="build"/>

    <target name="top-install" depends="install"/>

    <target name="top-build-doc">
	<!-- FIXME: wip -->
    </target>

    <target name="top-install-doc">
	<!-- FIXME: wip -->
    </target>

    <target name="top-run-tests" depends="run-tests"/>

</project>
