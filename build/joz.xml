<?xml version="1.0"?>
<project name="joz-joz" default="no-default" basedir="..">

	<target name="no-default">
		<echo>This is a dummy target. No targets in this file is to be invoked directly.</echo>
	</target>

    <!-- NOTE WELL: This file is imported into the main build.xml file.
         It is not intended to work standalone.  -->

    <!-- ****************************************************************** -->

    <target name="build-lucenetools" depends="build-Joz-jar">

        <delete dir="${stage.dir}/lucene"/>
        <mkdir dir="${stage.dir}/lucene"/>

        <copy todir="${stage.dir}/lucene" file="${dist.dir}/joz.jar"/>
        <copy todir="${stage.dir}/lucene" file="${ext.lib.dir}/lucene-core-2.1.0.jar"/>
        <copy todir="${stage.dir}/lucene" file="${ext.lib.dir}/lucene-memory-2.1.0.jar"/>
        <copy todir="${stage.dir}/lucene" file="${caa.lib.dir}/${caa.lib.file}"/>
        <copy todir="${stage.dir}/lucene" file="${llc.lib.dir}/${llc.lib.file}"/>
        <copy todir="${stage.dir}/lucene" file="${jic.lib.dir}/${jic.lib.file}"/>
        <copy todir="${stage.dir}/lucene" file="${cma.lib.dir}/${cma.lib.file}"/>
        <copy todir="${stage.dir}/lucene" file="${utils.lib.dir}/${utils.lib.file}"/>
        <copy todir="${stage.dir}/lucene" file="${ext.lib.dir}/log4j-1.2.6.jar"/>
        <copy todir="${stage.dir}/lucene" file="${ext.lib.dir}/commons-codec-1.3.jar"/>
        <copy todir="${stage.dir}/lucene" file="${ext.lib.dir}/commons-httpclient-3.0-rc2.jar"/>
        <copy todir="${stage.dir}/lucene" file="${ext.lib.dir}/commons-logging.jar"/>
        <copy todir="${stage.dir}/lucene" file="${ext.lib.dir}/hadoop-0.18.3-core.jar"/>

        <touch file="${stage.dir}/lucene/merge.sh"/>

        <echo file="${stage.dir}/lucene/merge.sh">#!/bin/sh</echo>
        <echo file="${stage.dir}/lucene/merge.sh">java -Xms512m -Xmx2g -classpath .:joz.jar:hadoop-0.18.3-core.jar:lucene-core-2.1.0.jar:lucene-memory-2.1.0.jar:${caa.lib.file}:${cma.lib.file}:${jic.lib.file}:${utils.lib.file}:log4j-1.2.6.jar:commons-codec-1.3.jar:commons-httpclient-3.0-rc2.jar:commons-logging.jar com.tumri.joz.keywordServer.ProductIndex $@</echo>
        <chmod file="${stage.dir}/lucene/merge.sh" perm="a+x"></chmod>

        <touch file="${stage.dir}/lucene/log4j.properties"/>
        <echo file="${stage.dir}/lucene/log4j.properties">log4j.rootLogger=INFO,A1
log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=[%t] %-4r %-5p (%F:%L) - %m%n</echo>

        <tar destfile="${stage.dir}/lucene/lucene.tar">
            <tarfileset dir="${stage.dir}/lucene">
            <include name="*.jar"/>
            </tarfileset>
            <tarfileset dir="${stage.dir}/lucene" mode="755">
            <include name="*.sh"/>
            <include name="*.properties"/>
            </tarfileset>
        </tar>

        <gzip zipfile="${dist.dir}/lucene.tar.gz" src="${stage.dir}/lucene/lucene.tar"/>
        <delete file="${stage.dir}/lucene/lucene.tar"/>

    </target>

	<target name="java-doc" depends="">
		<delete dir="${dist.dir}/javadocs"/>
		<mkdir dir="${dist.dir}/javadocs"/>
		<javadoc destdir="${dist.dir}/javadocs"
                 classpathref="project.class.path" author="false" version="true" use="true"
                 windowtitle="Joz Client API">
            <classpath refid="project.class.path"/>
            <packageset dir="${src.dir}" defaultexcludes="yes">
            <include name="com/tumri/joz/**"/>
            </packageset>
            <doctitle><![CDATA[<h1>Joz API</h1>]]></doctitle>
            <bottom>
            <![CDATA[<i>Copyright &#169; 2007 Tumri Inc. All Rights Reserved.</i>]]>
            </bottom>
		</javadoc>
	</target>

    <!-- ****************************************************************** -->

    <target name="build-Joz-jar" depends="init,version">

        <javac destdir="${classes.dir}"
               debug="on"
               optimize="on"
               srcdir="${src.dir}"
               includes="**/*.java"
	        excludes="com/tumri/joz/testsuite/*.java">
            <classpath refid="project.class.path"/>
            <compilerarg value="-Xlint:unchecked"/>
	    <compilerarg value="-Xlint:deprecation"/>
        </javac>

        <delete dir="${stage.dir}/Joz"/>
        <mkdir dir="${stage.dir}/Joz"/>

        <!-- copy so it gets put into our jar -->
        <copy file="${src.dir}/log4j.properties.template"
              todir="${stage.dir}/Joz"/>

        <jar destfile="${dist.dir}/joz.jar">
            <fileset dir="${classes.dir}"
		     includes="**/*.class"
		     excludes="com/tumri/joz/testsuite/*.class"/>
            <fileset dir="${stage.dir}/Joz"/>
			<!-- JMN - Include both *_version.properties and label file. -->
			<fileset dir="${dist.dir}" includes="${version_properties_file_dest}" />
			<fileset dir="${dist.dir}" includes="${label_file}" />
            <fileset dir="${src.dir}/conf">
                <include name="QueryHandlers.properties"/>
            </fileset>
        </jar>

    </target>

    <!-- ****************************************************************** -->

    <target name="build-Joz-war" depends="build-Joz-jar">

		<war destfile="${dist.dir}/joz.war" 
			webxml="${src.dir}/webresources/WEB-INF/web.xml">
			<fileset dir="${src.dir}/webresources/">
				<exclude name="WEB-INF"/>
			</fileset>
	    	<lib dir="${dist.dir}" includes="joz.jar"/>
	    	<lib dir="${ext.lib.dir}" includes="*.jar">
	    		<exclude name="log4j*.jar"/>
	    		<exclude name="servlet-api.jar"/>
				<exclude name="mysql-connector-java-3.1.14-bin.jar"/>        
      		</lib>
	    	<lib dir="${utils.lib.dir}" includes="${utils.lib.file}"/>
		    <lib dir="${cma.lib.dir}" includes="${cma.lib.file}"/>
			<lib dir="${jcl.lib.dir}" includes="${jcl.lib.file}"/>
			<lib dir="${jic.lib.dir}" includes="${jic.lib.file}"/>
		      <!--<lib dir="${cma.lib.dir}" includes="jyaml-1.2.jar"/>-->
      		<!--<lib dir="${cma.lib.dir}" includes="ibatis-2.3.0.677.jar"/>-->
      		<lib dir="${caa.lib.dir}" includes="${caa.lib.file}"/>
      		<lib dir="${llc.lib.dir}" includes="${llc.lib.file}"/>
			<!-- JMN - Include both *_version.properties and label file. -->
			<classes dir="${dist.dir}" includes="${version_properties_file_dest}" />
			<fileset dir="${dist.dir}" includes="${label_file}" />
		</war>

    </target>

	<!-- ****************************************************************** -->		
	<!-- JMN - A target to generate product version information. -->
	<target name="version">
		<property file="${root.dir}/build/joz_version.properties" />
		<!-- Copy *_version.properties over and create a label file. -->
		<copy
			file="${top.root.dir}/build/${version_properties_file_src}"
			tofile="${dist.dir}/${version_properties_file_dest}" />
		<touch file="${dist.dir}/${label_file}" />
		<echo file="${dist.dir}/${label_file}"># code_label=${code_label}${line.separator} </echo>

		<!-- Replace all variables in the *_version.properties with actual values. -->
		<replace file="${dist.dir}/${version_properties_file_dest}" > 
			<replacefilter token="{" value="@" />
			<replacefilter token="}" value="@" />
		</replace>
		<replace file="${dist.dir}/${version_properties_file_dest}" >			
			<replacefilter token="$@major_number@" value="${major_number}" />
			<replacefilter token="$@minor_number@" value="${minor_number}" />
			<replacefilter token="$@maintenance_number@" value="${maintenance_number}" />
			<replacefilter token="$@build_number@" value="${build_number}" />
			<replacefilter token="$@release_id@" value="${release_id}" />
			<replacefilter token="$@release_candidate@" value="${release_candidate}" />		
			<replacefilter token="$@code_label@" value="${code_label}"	/>	
		</replace>
					
		<!-- JMN - To be implemented and utilized in the future.
			<manifest>
			<section name="common">
			<attribute name="Specification-Title" value="${product_name}"/>
			<attribute name="Specification-Vendor" value="${vendor}"/>
			<attribute name="Specification-Version" value="${major_number}.${minor_number}.${maintenance_number}"/>
			<attribute name="Implementation-Title" value="${product_name}"/>
			<attribute name="Implementation-Vendor" value="${vendor}"/>
			<attribute name="Implementation-Version" value="${version}"/>
			</section>
			</manifest>
			<metainf dir="${dist.dir}/META-INF/">
			<copy file="${top.root.dir}/build/${version_properties_file_src}" 
			tofile="${dist.dir}/META-INF/${version_properties_file_dest}"/>
			<include name="${version_properties_file_dest}"/>
			</metainf>
		-->
	</target>

</project>
