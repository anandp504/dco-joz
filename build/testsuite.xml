<?xml version="1.0"?>
<project name="joz-testsuite" default="no-default" basedir="..">

    <!-- NOTE WELL: This file is imported into the main build.xml file.
         It is not intended to work standalone.  -->

    <path id="testsuite.libs">
	<fileset dir="${ext.lib.dir}" includes="*.jar" />
	<fileset dir="${utils.lib.dir}" includes="*.jar" />
	<fileset dir="${zini.lib.dir}" includes="*.jar" />
    </path>

    <!-- ****************************************************************** -->

    <target name="compile-tests">

        <javac destdir="${classes.dir}"
               debug="on"
               optimize="on"
               srcdir="${src.dir}"
               includes="com/tumri/joz/testsuite/*.java">
            <classpath refid="project.class.path"/>
            <compilerarg value="-Xlint:unchecked"/>
	    <compilerarg value="-Xlint:deprecation"/>
        </javac>

    </target>

    <!-- ****************************************************************** -->

    <target name="build-testsuite-jar"
	    depends="init,compile-tests">

        <delete dir="${dist.dir}/testsuite"/>
        <mkdir dir="${dist.dir}/testsuite"/>

        <!-- copy so it gets put into our jar -->
        <copy file="${src.dir}/log4j.properties"
              todir="${dist.dir}/testsuite"/>
        <copy file="${src.dir}/conf/testsuite.properties"
              todir="${dist.dir}/testsuite"/>

	<jar destfile="${dist.dir}/testsuite.jar">
            <fileset dir="${classes.dir}"
		     includes="com/tumri/joz/testsuite/*.class"/>
            <fileset dir="${dist.dir}/testsuite"/>
            <manifest>
                <attribute name="Main-Class" value="com.tumri.joz.testsuite.TestsuiteUtils"/>
            </manifest>
        </jar>

    </target>

    <!-- ****************************************************************** -->

    <target name="build-tests"
	    depends="build-testsuite-jar"/>

    <!-- ****************************************************************** -->

    <target name="run-tests" depends="build-tests">

	<!-- First start joz.  -->
	<exec executable="/bin/sh"
	      dir="${joz.install.dir}/temp"
	      spawn="true">
	    <env key="JAVA_OPTS" value="-Xms512m -Xmx512m"/>
	    <arg value="../bin/catalina.sh"/>
	    <arg value="run"/>
	    <arg value="-config"/>
	    <arg value="conf/server-joz.xml"/>
	</exec>

	<!-- Sleep a bit to allow tomcat to start, but only sleep as long as it
	     takes before an httpclient request can connect.  The test driver
	     itself will handle the rest, we only do this to reduce the
	     "i/o exception" noise in the test driver output before tomcat
	     has had a chance to initialize.  This sleep is _not_ necessary
	     for correctness.  -->
	<sleep seconds="20"/>

	<!-- Now we can run the tests.  -->
	<java classpathref="testsuite.libs"
	      classpath="${dist.dir}/testsuite.jar"
	      classname="com/tumri/joz/testsuite/JozTestsuite"
	      fork="true">
	    <arg value="all"/>
	</java>

	<!-- All done, terminate joz.  -->
	<exec executable="/bin/sh"
	      dir="${joz.install.dir}/temp">
	    <arg value="../bin/shutdown.sh"/>
	</exec>

    </target>

    <!-- ****************************************************************** -->

    <!-- Utility target to run one test against an already running joz.  -->

    <property name="run1.test" value="get-complete-taxonomy"/>

    <target name="run1-test">

	<java classpathref="testsuite.libs"
	      classpath="${dist.dir}/testsuite.jar"
	      classname="com/tumri/joz/testsuite/JozTestsuite"
	      fork="true">
	    <arg value="${run1.test}"/>
	</java>

    </target>

</project>
